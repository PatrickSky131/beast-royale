const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/core-C-Ru_vPf.js","assets/index-BbJoTwP4.js","assets/index-C-9nAa4t.css","assets/index.es-CwmcmMiR.js"])))=>i.map(i=>d[i]);
import{_ as j}from"./index-BbJoTwP4.js";import{e as R,_ as O,m as T,a as C,K as x}from"./index.es-CwmcmMiR.js";const N="wc",$="ethereum_provider",q=`${N}@2:${$}:`,k="https://rpc.walletconnect.org/v1/",E=["eth_sendTransaction","personal_sign"],D=["eth_accounts","eth_requestAccounts","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sendTransaction","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode","wallet_sendCalls","wallet_getCapabilities","wallet_getCallsStatus","wallet_showCallsStatus"],b=["chainChanged","accountsChanged"],U=["chainChanged","accountsChanged","message","disconnect","connect"],z=async()=>{const{createAppKit:s}=await j(()=>import("./core-C-Ru_vPf.js").then(e=>e.X),__vite__mapDeps([0,1,2,3]));return s};var L=Object.defineProperty,Q=Object.defineProperties,K=Object.getOwnPropertyDescriptors,P=Object.getOwnPropertySymbols,V=Object.prototype.hasOwnProperty,G=Object.prototype.propertyIsEnumerable,y=(s,e,t)=>e in s?L(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,w=(s,e)=>{for(var t in e||(e={}))V.call(e,t)&&y(s,t,e[t]);if(P)for(var t of P(e))G.call(e,t)&&y(s,t,e[t]);return s},f=(s,e)=>Q(s,K(e)),p=(s,e,t)=>y(s,typeof e!="symbol"?e+"":e,t);function I(s){return Number(s[0].split(":")[1])}function v(s){return`0x${s.toString(16)}`}function Y(s){const{chains:e,optionalChains:t,methods:n,optionalMethods:i,events:a,optionalEvents:o,rpcMap:m}=s;if(!C(e))throw new Error("Invalid chains");const c={chains:e,methods:n||E,events:a||b,rpcMap:w({},e.length?{[I(e)]:m[I(e)]}:{})},h=a==null?void 0:a.filter(d=>!b.includes(d)),r=n==null?void 0:n.filter(d=>!E.includes(d));if(!t&&!o&&!i&&!(h!=null&&h.length)&&!(r!=null&&r.length))return{required:e.length?c:void 0};const u=(h==null?void 0:h.length)&&(r==null?void 0:r.length)||!t,l={chains:[...new Set(u?c.chains.concat(t||[]):t)],methods:[...new Set(c.methods.concat(i!=null&&i.length?i:D))],events:[...new Set(c.events.concat(o!=null&&o.length?o:U))],rpcMap:m};return{required:e.length?c:void 0,optional:t.length?l:void 0}}class _{constructor(){p(this,"events",new R.EventEmitter),p(this,"namespace","eip155"),p(this,"accounts",[]),p(this,"signer"),p(this,"chainId",1),p(this,"modal"),p(this,"rpc"),p(this,"STORAGE_KEY",q),p(this,"on",(e,t)=>(this.events.on(e,t),this)),p(this,"once",(e,t)=>(this.events.once(e,t),this)),p(this,"removeListener",(e,t)=>(this.events.removeListener(e,t),this)),p(this,"off",(e,t)=>(this.events.off(e,t),this)),p(this,"parseAccount",e=>this.isCompatibleChainId(e)?this.parseAccountId(e).address:e),this.signer={},this.rpc={}}static async init(e){const t=new _;return await t.initialize(e),t}async request(e,t){return await this.signer.request(e,this.formatChainId(this.chainId),t)}sendAsync(e,t,n){this.signer.sendAsync(e,t,this.formatChainId(this.chainId),n)}get connected(){return this.signer.client?this.signer.client.core.relayer.connected:!1}get connecting(){return this.signer.client?this.signer.client.core.relayer.connecting:!1}async enable(){return this.session||await this.connect(),await this.request({method:"eth_requestAccounts"})}async connect(e){var t;if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts(e);const{required:n,optional:i}=Y(this.rpc);try{const a=await new Promise(async(m,c)=>{var h,r;this.rpc.showQrModal&&((h=this.modal)==null||h.open(),(r=this.modal)==null||r.subscribeState(l=>{!l.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),c(new Error("Connection request reset. Please try again.")))}));const u=e!=null&&e.scopedProperties?{[this.namespace]:e.scopedProperties}:void 0;await this.signer.connect(f(w({namespaces:w({},n&&{[this.namespace]:n})},i&&{optionalNamespaces:{[this.namespace]:i}}),{pairingTopic:e==null?void 0:e.pairingTopic,scopedProperties:u})).then(l=>{m(l)}).catch(l=>{var d;(d=this.modal)==null||d.showErrorMessage("Unable to connect"),c(new Error(l.message))})});if(!a)return;const o=O(a.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:o),this.setAccounts(o),this.events.emit("connect",{chainId:v(this.chainId)})}catch(a){throw this.signer.logger.error(a),a}finally{(t=this.modal)==null||t.close()}}async authenticate(e,t){var n;if(!this.signer.client)throw new Error("Provider not initialized. Call init() first");this.loadConnectOpts({chains:e==null?void 0:e.chains});try{const i=await new Promise(async(o,m)=>{var c,h;this.rpc.showQrModal&&((c=this.modal)==null||c.open(),(h=this.modal)==null||h.subscribeState(r=>{!r.open&&!this.signer.session&&(this.signer.abortPairingAttempt(),m(new Error("Connection request reset. Please try again.")))})),await this.signer.authenticate(f(w({},e),{chains:this.rpc.chains}),t).then(r=>{o(r)}).catch(r=>{var u;(u=this.modal)==null||u.showErrorMessage("Unable to connect"),m(new Error(r.message))})}),a=i.session;if(a){const o=O(a.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:o),this.setAccounts(o),this.events.emit("connect",{chainId:v(this.chainId)})}return i}catch(i){throw this.signer.logger.error(i),i}finally{(n=this.modal)==null||n.close()}}async disconnect(){this.session&&await this.signer.disconnect(),this.reset()}get isWalletConnect(){return!0}get session(){return this.signer.session}registerEventListeners(){this.signer.on("session_event",e=>{const{params:t}=e,{event:n}=t;n.name==="accountsChanged"?(this.accounts=this.parseAccounts(n.data),this.events.emit("accountsChanged",this.accounts)):n.name==="chainChanged"?this.setChainId(this.formatChainId(n.data)):this.events.emit(n.name,n.data),this.events.emit("session_event",e)}),this.signer.on("accountsChanged",e=>{this.accounts=this.parseAccounts(e),this.events.emit("accountsChanged",this.accounts)}),this.signer.on("chainChanged",e=>{const t=parseInt(e);this.chainId=t,this.events.emit("chainChanged",v(this.chainId)),this.persist()}),this.signer.on("session_update",e=>{this.events.emit("session_update",e)}),this.signer.on("session_delete",e=>{this.reset(),this.events.emit("session_delete",e),this.events.emit("disconnect",f(w({},x("USER_DISCONNECTED")),{data:e.topic,name:"USER_DISCONNECTED"}))}),this.signer.on("display_uri",e=>{this.events.emit("display_uri",e)})}switchEthereumChain(e){this.request({method:"wallet_switchEthereumChain",params:[{chainId:e.toString(16)}]})}isCompatibleChainId(e){return typeof e=="string"?e.startsWith(`${this.namespace}:`):!1}formatChainId(e){return`${this.namespace}:${e}`}parseChainId(e){return Number(e.split(":")[1])}setChainIds(e){const t=e.filter(n=>this.isCompatibleChainId(n)).map(n=>this.parseChainId(n));t.length&&(this.chainId=t[0],this.events.emit("chainChanged",v(this.chainId)),this.persist())}setChainId(e){if(this.isCompatibleChainId(e)){const t=this.parseChainId(e);this.chainId=t,this.switchEthereumChain(t)}}parseAccountId(e){const[t,n,i]=e.split(":");return{chainId:`${t}:${n}`,address:i}}setAccounts(e){this.accounts=e.filter(t=>this.parseChainId(this.parseAccountId(t).chainId)===this.chainId).map(t=>this.parseAccountId(t).address),this.events.emit("accountsChanged",this.accounts)}getRpcConfig(e){var t,n;const i=(t=e==null?void 0:e.chains)!=null?t:[],a=(n=e==null?void 0:e.optionalChains)!=null?n:[],o=i.concat(a);if(!o.length)throw new Error("No chains specified in either `chains` or `optionalChains`");const m=i.length?(e==null?void 0:e.methods)||E:[],c=i.length?(e==null?void 0:e.events)||b:[],h=(e==null?void 0:e.optionalMethods)||[],r=(e==null?void 0:e.optionalEvents)||[],u=(e==null?void 0:e.rpcMap)||this.buildRpcMap(o,e.projectId),l=(e==null?void 0:e.qrModalOptions)||void 0;return{chains:i==null?void 0:i.map(d=>this.formatChainId(d)),optionalChains:a.map(d=>this.formatChainId(d)),methods:m,events:c,optionalMethods:h,optionalEvents:r,rpcMap:u,showQrModal:!!(e!=null&&e.showQrModal),qrModalOptions:l,projectId:e.projectId,metadata:e.metadata}}buildRpcMap(e,t){const n={};return e.forEach(i=>{n[i]=this.getRpcUrl(i,t)}),n}async initialize(e){if(this.rpc=this.getRpcConfig(e),this.chainId=this.rpc.chains.length?I(this.rpc.chains):I(this.rpc.optionalChains),this.signer=await T.init({projectId:this.rpc.projectId,metadata:this.rpc.metadata,disableProviderPing:e.disableProviderPing,relayUrl:e.relayUrl,storage:e.storage,storageOptions:e.storageOptions,customStoragePrefix:e.customStoragePrefix,telemetryEnabled:e.telemetryEnabled,logger:e.logger}),this.registerEventListeners(),await this.loadPersistedSession(),this.rpc.showQrModal){let t;try{const n=await z(),{convertWCMToAppKitOptions:i}=await Promise.resolve().then(function(){return ne}),a=i(f(w({},this.rpc.qrModalOptions),{chains:[...new Set([...this.rpc.chains,...this.rpc.optionalChains])],metadata:this.rpc.metadata,projectId:this.rpc.projectId}));if(!a.networks.length)throw new Error("No networks found for WalletConnectÂ·");t=n(f(w({},a),{universalProvider:this.signer,manualWCControl:!0}))}catch(n){throw console.warn(n),new Error("To use QR modal, please install @reown/appkit package")}if(t)try{this.modal=t}catch(n){throw this.signer.logger.error(n),new Error("Could not generate WalletConnectModal Instance")}}}loadConnectOpts(e){if(!e)return;const{chains:t,optionalChains:n,rpcMap:i}=e;t&&C(t)&&(this.rpc.chains=t.map(a=>this.formatChainId(a)),t.forEach(a=>{this.rpc.rpcMap[a]=(i==null?void 0:i[a])||this.getRpcUrl(a)})),n&&C(n)&&(this.rpc.optionalChains=[],this.rpc.optionalChains=n==null?void 0:n.map(a=>this.formatChainId(a)),n.forEach(a=>{this.rpc.rpcMap[a]=(i==null?void 0:i[a])||this.getRpcUrl(a)}))}getRpcUrl(e,t){var n;return((n=this.rpc.rpcMap)==null?void 0:n[e])||`${k}?chainId=eip155:${e}&projectId=${t||this.rpc.projectId}`}async loadPersistedSession(){if(this.session)try{const e=await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`),t=this.session.namespaces[`${this.namespace}:${e}`]?this.session.namespaces[`${this.namespace}:${e}`]:this.session.namespaces[this.namespace];this.setChainIds(e?[this.formatChainId(e)]:t==null?void 0:t.accounts),this.setAccounts(t==null?void 0:t.accounts)}catch(e){this.signer.logger.error("Failed to load persisted session, clearing state..."),this.signer.logger.error(e),await this.disconnect().catch(t=>this.signer.logger.warn(t))}}reset(){this.chainId=1,this.accounts=[]}persist(){this.session&&this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`,this.chainId)}parseAccounts(e){return typeof e=="string"||e instanceof String?[this.parseAccount(e)]:e.map(t=>this.parseAccount(t))}}const re=_;var B=Object.defineProperty,H=Object.defineProperties,F=Object.getOwnPropertyDescriptors,A=Object.getOwnPropertySymbols,X=Object.prototype.hasOwnProperty,J=Object.prototype.propertyIsEnumerable,M=(s,e,t)=>e in s?B(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,S=(s,e)=>{for(var t in e||(e={}))X.call(e,t)&&M(s,t,e[t]);if(A)for(var t of A(e))J.call(e,t)&&M(s,t,e[t]);return s},Z=(s,e)=>H(s,F(e));function ee(s){if(s)return{"--w3m-font-family":s["--wcm-font-family"],"--w3m-accent":s["--wcm-accent-color"],"--w3m-color-mix":s["--wcm-background-color"],"--w3m-z-index":s["--wcm-z-index"]?Number(s["--wcm-z-index"]):void 0,"--w3m-qr-color":s["--wcm-accent-color"],"--w3m-font-size-master":s["--wcm-text-medium-regular-size"],"--w3m-border-radius-master":s["--wcm-container-border-radius"],"--w3m-color-mix-strength":0}}const te=s=>{const[e,t]=s.split(":");return W({id:t,caipNetworkId:s,chainNamespace:e,name:"",nativeCurrency:{name:"",symbol:"",decimals:8},rpcUrls:{default:{http:["https://rpc.walletconnect.org/v1"]}}})};function se(s){var e,t,n,i,a,o,m;const c=(e=s.chains)==null?void 0:e.map(te).filter(Boolean);if(c.length===0)throw new Error("At least one chain must be specified");const h=c.find(u=>{var l;return u.id===((l=s.defaultChain)==null?void 0:l.id)}),r={projectId:s.projectId,networks:c,themeMode:s.themeMode,themeVariables:ee(s.themeVariables),chainImages:s.chainImages,connectorImages:s.walletImages,defaultNetwork:h,metadata:Z(S({},s.metadata),{name:((t=s.metadata)==null?void 0:t.name)||"WalletConnect",description:((n=s.metadata)==null?void 0:n.description)||"Connect to WalletConnect-compatible wallets",url:((i=s.metadata)==null?void 0:i.url)||"https://walletconnect.org",icons:((a=s.metadata)==null?void 0:a.icons)||["https://walletconnect.org/walletconnect-logo.png"]}),showWallets:!0,featuredWalletIds:s.explorerRecommendedWalletIds==="NONE"?[]:Array.isArray(s.explorerRecommendedWalletIds)?s.explorerRecommendedWalletIds:[],excludeWalletIds:s.explorerExcludedWalletIds==="ALL"?[]:Array.isArray(s.explorerExcludedWalletIds)?s.explorerExcludedWalletIds:[],enableEIP6963:!1,enableInjected:!1,enableCoinbase:!0,enableWalletConnect:!0,features:{email:!1,socials:!1}};if((o=s.mobileWallets)!=null&&o.length||(m=s.desktopWallets)!=null&&m.length){const u=[...(s.mobileWallets||[]).map(g=>({id:g.id,name:g.name,links:g.links})),...(s.desktopWallets||[]).map(g=>({id:g.id,name:g.name,links:{native:g.links.native,universal:g.links.universal}}))],l=[...r.featuredWalletIds||[],...r.excludeWalletIds||[]],d=u.filter(g=>!l.includes(g.id));d.length&&(r.customWallets=d)}return r}function W(s){return S({formatters:void 0,fees:void 0,serializers:void 0},s)}var ne=Object.freeze({__proto__:null,convertWCMToAppKitOptions:se,defineChain:W});export{re as EthereumProvider,U as OPTIONAL_EVENTS,D as OPTIONAL_METHODS,b as REQUIRED_EVENTS,E as REQUIRED_METHODS,_ as default};
